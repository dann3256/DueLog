openapi: 3.0.3
info:
  title: DueLog API
  description: API
  version: 1.0.0
  license:
    name: MIT
    url: https://github.com/dann3256/DueLog
servers:
  - url: http://localhost:8080
tags:
  - name: Users
    description: ユーザー管理
  - name: Banks
    description: 銀行管理
  - name: Companies
    description: 会社管理
  - name: Bills
    description: 請求書（振込情報）管理
paths:
  /users:
    post:
      summary: create Users
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '201':
          description: User creation was successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: get user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserRequest'
      responses:
        '201':
          description: obtain user information was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /users/{id}:
    get:
      summary: get user
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: obtain user information was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: update user
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: update was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: error
    delete:
      summary: delete user
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: delete was success
        '404':
          description: error
  /banks:
    post:
      summary: create banks
      tags:
        - Banks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBankRequest'
      responses:
        '201':
          description: creation bank was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
  /banks/{id}:
    get:
      summary: get information
      tags:
        - Banks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: obtain bank information was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bank'
        '404':
          description: error
  /companies:
    post:
      summary: create company
      tags:
        - Companies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCompanyRequest'
      responses:
        '201':
          description: creation companies was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
  /companies/{id}:
    get:
      summary: get company information
      tags:
        - Companies
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: obtain companies was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
    put:
      summary: update
      tags:
        - Companies
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompanyRequest'
      responses:
        '200':
          description: update companies was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
    delete:
      summary: delete
      tags:
        - Companies
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: delete companies was success
  /bills:
    get:
      summary: get bill
      tags:
        - Bills
      parameters:
        - name: payment_date
          in: query
          description: filter
          schema:
            $ref: '#/components/schemas/PaymentPeriod'
        - name: is_paid
          in: query
          description: status filter
          schema:
            type: boolean
      responses:
        '200':
          description: obtain bill information was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillListResponse'
    post:
      summary: create bill
      tags:
        - Bills
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBillRequest'
      responses:
        '201':
          description: creation bill was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
        '400':
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillValidationResponse'
  /bills/{id}:
    get:
      summary: get  direct bill
      tags:
        - Bills
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: obtain direct bill information was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
    put:
      summary: update bill
      tags:
        - Bills
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBillRequest'
      responses:
        '200':
          description: update bill was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
    delete:
      summary: delete bill
      tags:
        - Bills
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: delete bill was success
  /bills/{id}/payment-status:
    patch:
      summary: chenge payment-status
      tags:
        - Bills
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentStatusRequest'
      responses:
        '200':
          description: changing status was success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bill'
components:
  schemas:
    GetUserRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
        email:
          type: string
          format: email
          maxLength: 255
      required:
        - name
        - email
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 255
        created_at:
          type: string
          format: date-time
      required:
        - id
        - name
        - email
    Error:
      type: object
      properties:
        message:
          type: string
      required:
        - name
        - email
    CreateUserRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
        email:
          type: string
          format: email
          maxLength: 255
      required:
        - name
        - email
    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
        email:
          type: string
          format: email
          maxLength: 255
    CreateBankRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
          minLength: 1
      required:
        - name
    Bank:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 50
      required:
        - id
        - name
    CreateCompanyRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
      required:
        - name
    Company:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
      required:
        - id
        - name
    UpdateCompanyRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 255
          minLength: 1
      required:
        - name
    PaymentPeriod:
      type: string
      description: 振込期限区分
      enum:
        - current_month_end
        - next_month_15
        - next_month_20
        - next_month_end
    Bill:
      type: object
      properties:
        id:
          type: integer
          format: int64
        company:
          $ref: '#/components/schemas/Company'
        bank:
          $ref: '#/components/schemas/Bank'
        amount:
          type: integer
          description: 支払金額（円）
          minimum: 1
        payment_limit:
          type: integer
          description: 振込上限金額（円）
          minimum: 1
        payment_date:
          type: string
          format: date
          description: 実際の振込予定日
        payment_period:
          type: string
          enum:
            - current_month_end
            - next_month_15
            - next_month_20
            - next_month_end
          description: 振込期限区分
        is_paid:
          type: boolean
          description: 支払済みフラグ
        paid_at:
          type: string
          format: date-time
          nullable: true
          description: 支払完了日時
        description:
          type: string
          nullable: true
          description: 備考
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - company
        - bank
        - amount
        - payment_limit
        - payment_date
        - payment_period
        - is_paid
    BillListResponse:
      type: object
      properties:
        bills:
          type: array
          items:
            $ref: '#/components/schemas/Bill'
        total:
          type: integer
          description: 総件数
      required:
        - bills
        - total
    CreateBillRequest:
      type: object
      properties:
        company_id:
          type: integer
          format: int64
        bank_id:
          type: integer
          format: int64
        amount:
          type: integer
          description: 支払金額（円）
          minimum: 1
        payment_limit:
          type: integer
          description: 振込上限金額（円）
          minimum: 1
        payment_period:
          type: string
          enum:
            - current_month_end
            - next_month_15
            - next_month_20
            - next_month_end
          description: 振込期限区分（上限超過時は自動でnext_month_15に調整）
        description:
          type: string
          nullable: true
      required:
        - company_id
        - bank_id
        - amount
        - payment_limit
        - payment_period
    BillValidationResponse:
      type: object
      properties:
        bill:
          $ref: '#/components/schemas/Bill'
        warnings:
          type: array
          items:
            type: string
          description: 警告メッセージ（例：上限超過による期限自動変更）
        adjusted:
          type: boolean
          description: 自動調整が行われたかどうか
      required:
        - bill
        - warnings
        - adjusted
    UpdateBillRequest:
      type: object
      properties:
        company_id:
          type: integer
          format: int64
        bank_id:
          type: integer
          format: int64
        amount:
          type: integer
          minimum: 1
        payment_limit:
          type: integer
          minimum: 1
        payment_period:
          type: string
          enum:
            - current_month_end
            - next_month_15
            - next_month_20
            - next_month_end
        description:
          type: string
          nullable: true
      required:
        - company_id
        - bank_id
        - amount
        - payment_limit
        - payment_period
    UpdatePaymentStatusRequest:
      type: object
      properties:
        is_paid:
          type: boolean
      required:
        - is_paid
