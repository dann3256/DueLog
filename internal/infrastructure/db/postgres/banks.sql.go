// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: banks.sql

package sqlc

import (
	"context"
)

const delteBank = `-- name: DelteBank :exec
DELETE FROM banks
WHERE id = $1
`

func (q *Queries) DelteBank(ctx context.Context, id int32) error {
	_, err := q.db.Exec(ctx, delteBank, id)
	return err
}

const insertBank = `-- name: InsertBank :exec
INSERT INTO banks (name)
VALUES ($1)
`

func (q *Queries) InsertBank(ctx context.Context, name BankName) error {
	_, err := q.db.Exec(ctx, insertBank, name)
	return err
}

const selectBank = `-- name: SelectBank :one
SELECT name FROM banks
WHERE id = $1
`

func (q *Queries) SelectBank(ctx context.Context, id int32) (BankName, error) {
	row := q.db.QueryRow(ctx, selectBank, id)
	var name BankName
	err := row.Scan(&name)
	return name, err
}

const updateBank = `-- name: UpdateBank :exec
UPDATE banks
SET name = $1
WHERE id = $2
`

type UpdateBankParams struct {
	Name BankName
	ID   int32
}

func (q *Queries) UpdateBank(ctx context.Context, arg UpdateBankParams) error {
	_, err := q.db.Exec(ctx, updateBank, arg.Name, arg.ID)
	return err
}
