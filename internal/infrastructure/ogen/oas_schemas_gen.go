// Code generated by ogen, DO NOT EDIT.

package api

import (
	"fmt"

	"github.com/go-faster/errors"
)

func (s *InternalServerErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

type AuthBadRequest BadRequest

func (*AuthBadRequest) authRes() {}

type AuthNotFound BadRequest

func (*AuthNotFound) authRes() {}

// AuthOK is response for Auth operation.
type AuthOK struct {
	SetCookie string
}

// GetSetCookie returns the value of SetCookie.
func (s *AuthOK) GetSetCookie() string {
	return s.SetCookie
}

// SetSetCookie sets the value of SetCookie.
func (s *AuthOK) SetSetCookie(val string) {
	s.SetCookie = val
}

func (*AuthOK) authRes() {}

type AuthReq struct {
	// Boolean to indicate if the user is signing in or signing up.
	Signup bool `json:"signup"`
	// Google JWT token provided after Google authentication.
	Token string `json:"token"`
}

// GetSignup returns the value of Signup.
func (s *AuthReq) GetSignup() bool {
	return s.Signup
}

// GetToken returns the value of Token.
func (s *AuthReq) GetToken() string {
	return s.Token
}

// SetSignup sets the value of Signup.
func (s *AuthReq) SetSignup(val bool) {
	s.Signup = val
}

// SetToken sets the value of Token.
func (s *AuthReq) SetToken(val string) {
	s.Token = val
}

type BadRequest struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *BadRequest) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *BadRequest) SetMessage(val string) {
	s.Message = val
}

func (*BadRequest) banksPostRes()     {}
func (*BadRequest) companiesPostRes() {}
func (*BadRequest) usersPostRes()     {}

// Creation bank was success.
// Ref: #/components/schemas/BankCreated
type BankCreated struct{}

func (*BankCreated) banksPostRes() {}

// Obtain bank information was success.
// Ref: #/components/schemas/BankObtained
type BankObtained struct{}

func (*BankObtained) banksIDGetRes() {}

type BanksIDGetBadRequest BadRequest

func (*BanksIDGetBadRequest) banksIDGetRes() {}

type BanksIDGetNotFound BadRequest

func (*BanksIDGetNotFound) banksIDGetRes() {}

// Creation bill was success.
// Ref: #/components/schemas/BillCreated
type BillCreated struct{}

func (*BillCreated) billsPostRes() {}

// Obtain direct bill information was success.
// Ref: #/components/schemas/BillObtained
type BillObtained struct{}

func (*BillObtained) billsIDGetRes()            {}
func (*BillObtained) paydatePaymentDateGetRes() {}

// Update bill was success.
// Ref: #/components/schemas/BillUpdated
type BillUpdated struct{}

func (*BillUpdated) billsIDPutRes() {}

type BillsIDDeleteBadRequest BadRequest

func (*BillsIDDeleteBadRequest) billsIDDeleteRes() {}

// BillsIDDeleteNoContent is response for BillsIDDelete operation.
type BillsIDDeleteNoContent struct{}

func (*BillsIDDeleteNoContent) billsIDDeleteRes() {}

type BillsIDDeleteNotFound BadRequest

func (*BillsIDDeleteNotFound) billsIDDeleteRes() {}

type BillsIDGetBadRequest BadRequest

func (*BillsIDGetBadRequest) billsIDGetRes() {}

type BillsIDGetNotFound BadRequest

func (*BillsIDGetNotFound) billsIDGetRes() {}

type BillsIDPutBadRequest BadRequest

func (*BillsIDPutBadRequest) billsIDPutRes() {}

type BillsIDPutNotFound BadRequest

func (*BillsIDPutNotFound) billsIDPutRes() {}

type BillsPostBadRequest BadRequest

func (*BillsPostBadRequest) billsPostRes() {}

type BillsPostNotFound BadRequest

func (*BillsPostNotFound) billsPostRes() {}

type BillsStatementIDPutBadRequest BadRequest

func (*BillsStatementIDPutBadRequest) billsStatementIDPutRes() {}

type BillsStatementIDPutNotFound BadRequest

func (*BillsStatementIDPutNotFound) billsStatementIDPutRes() {}

// BillsStatementIDPutOK is response for BillsStatementIDPut operation.
type BillsStatementIDPutOK struct{}

func (*BillsStatementIDPutOK) billsStatementIDPutRes() {}

type CompaniesIDDeleteBadRequest BadRequest

func (*CompaniesIDDeleteBadRequest) companiesIDDeleteRes() {}

// CompaniesIDDeleteNoContent is response for CompaniesIDDelete operation.
type CompaniesIDDeleteNoContent struct{}

func (*CompaniesIDDeleteNoContent) companiesIDDeleteRes() {}

type CompaniesIDDeleteNotFound BadRequest

func (*CompaniesIDDeleteNotFound) companiesIDDeleteRes() {}

type CompaniesIDGetBadRequest BadRequest

func (*CompaniesIDGetBadRequest) companiesIDGetRes() {}

type CompaniesIDGetNotFound BadRequest

func (*CompaniesIDGetNotFound) companiesIDGetRes() {}

type CompaniesIDPutBadRequest BadRequest

func (*CompaniesIDPutBadRequest) companiesIDPutRes() {}

type CompaniesIDPutNotFound BadRequest

func (*CompaniesIDPutNotFound) companiesIDPutRes() {}

// Creation companies was success.
// Ref: #/components/schemas/CompanyCreated
type CompanyCreated struct{}

func (*CompanyCreated) companiesPostRes() {}

// Obtain companies was success.
// Ref: #/components/schemas/CompanyObtained
type CompanyObtained struct{}

func (*CompanyObtained) companiesIDGetRes() {}

// Update companies was success.
// Ref: #/components/schemas/CompanyUpdated
type CompanyUpdated struct{}

func (*CompanyUpdated) companiesIDPutRes() {}

// Ref: #/components/schemas/CreateBankRequest
type CreateBankRequest struct{}

// Ref: #/components/schemas/CreateBillRequest
type CreateBillRequest struct{}

// Ref: #/components/schemas/CreateCompanyRequest
type CreateCompanyRequest struct{}

// Ref: #/components/schemas/CreateUserRequest
type CreateUserRequest struct{}

type ID int32

type InternalServerError struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *InternalServerError) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *InternalServerError) SetMessage(val string) {
	s.Message = val
}

// InternalServerErrorStatusCode wraps InternalServerError with StatusCode.
type InternalServerErrorStatusCode struct {
	StatusCode int
	Response   InternalServerError
}

// GetStatusCode returns the value of StatusCode.
func (s *InternalServerErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *InternalServerErrorStatusCode) GetResponse() InternalServerError {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *InternalServerErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *InternalServerErrorStatusCode) SetResponse(val InternalServerError) {
	s.Response = val
}

type PaydatePaymentDateGetBadRequest BadRequest

func (*PaydatePaymentDateGetBadRequest) paydatePaymentDateGetRes() {}

type PaydatePaymentDateGetNotFound BadRequest

func (*PaydatePaymentDateGetNotFound) paydatePaymentDateGetRes() {}

// 振込期限区分.
// Ref: #/components/schemas/payment_date
type PaymentDate string

const (
	PaymentDateCurrentMonthEnd PaymentDate = "current_month_end"
	PaymentDateNextMonth15     PaymentDate = "next_month_15"
	PaymentDateNextMonth20     PaymentDate = "next_month_20"
	PaymentDateNextMonthEnd    PaymentDate = "next_month_end"
)

// AllValues returns all PaymentDate values.
func (PaymentDate) AllValues() []PaymentDate {
	return []PaymentDate{
		PaymentDateCurrentMonthEnd,
		PaymentDateNextMonth15,
		PaymentDateNextMonth20,
		PaymentDateNextMonthEnd,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s PaymentDate) MarshalText() ([]byte, error) {
	switch s {
	case PaymentDateCurrentMonthEnd:
		return []byte(s), nil
	case PaymentDateNextMonth15:
		return []byte(s), nil
	case PaymentDateNextMonth20:
		return []byte(s), nil
	case PaymentDateNextMonthEnd:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *PaymentDate) UnmarshalText(data []byte) error {
	switch PaymentDate(data) {
	case PaymentDateCurrentMonthEnd:
		*s = PaymentDateCurrentMonthEnd
		return nil
	case PaymentDateNextMonth15:
		*s = PaymentDateNextMonth15
		return nil
	case PaymentDateNextMonth20:
		*s = PaymentDateNextMonth20
		return nil
	case PaymentDateNextMonthEnd:
		*s = PaymentDateNextMonthEnd
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/UpdateBillRequest
type UpdateBillRequest struct{}

// Ref: #/components/schemas/UpdateUserRequest
type UpdateUserRequest struct{}

// User creation was successful.
// Ref: #/components/schemas/UserCreated
type UserCreated struct{}

func (*UserCreated) usersPostRes() {}

// Obtain user information was success.
// Ref: #/components/schemas/UserObtained
type UserObtained struct{}

func (*UserObtained) usersGetRes() {}

// Update was success.
// Ref: #/components/schemas/UserUpdated
type UserUpdated struct{}

func (*UserUpdated) usersIDGetRes() {}
func (*UserUpdated) usersIDPutRes() {}

type UsersGetBadRequest BadRequest

func (*UsersGetBadRequest) usersGetRes() {}

type UsersGetNotFound BadRequest

func (*UsersGetNotFound) usersGetRes() {}

type UsersIDDeleteBadRequest BadRequest

func (*UsersIDDeleteBadRequest) usersIDDeleteRes() {}

// UsersIDDeleteNoContent is response for UsersIDDelete operation.
type UsersIDDeleteNoContent struct{}

func (*UsersIDDeleteNoContent) usersIDDeleteRes() {}

type UsersIDDeleteNotFound BadRequest

func (*UsersIDDeleteNotFound) usersIDDeleteRes() {}

type UsersIDGetBadRequest BadRequest

func (*UsersIDGetBadRequest) usersIDGetRes() {}

type UsersIDGetNotFound BadRequest

func (*UsersIDGetNotFound) usersIDGetRes() {}

type UsersIDPutBadRequest BadRequest

func (*UsersIDPutBadRequest) usersIDPutRes() {}

type UsersIDPutNotFound BadRequest

func (*UsersIDPutNotFound) usersIDPutRes() {}
